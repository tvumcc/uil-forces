10
Let's start with a short 1-line paragraph just to see a result!
Now, this ^second paragraph^ will be much longer which results in the sample input displaying with all continuation lines indented.  However, it will be a single unbroken line in the data file that is provided for the contest...
This is the third "paragraph" of sample data for this ~programming problem~...
Joan really enjoys her `programming` cla$$ but her @true passion is the English language.  However, programming has caused her to view English writings somewhat differently and she realizes that words are simply pieces of data put together carefully to create a desired meaning.  For now, she has decided to practice her programming skills by creating a program to perform a very simple analysis of relatively small pieces of prose.
Joan has big plans for analyzing {written pieces} but decided to start with a program that simply counts the number of words in a sample of prose and calculate the average length of all words.
Input:  A sample of English prose with an (unknown number of lines) containing an unknown number of whitespace-separated words on each line.  The number of lines will be in the range [2,25].  Words may consist of both uppercase and lowercase letters and there are no non-letter symbols or numbers.
Output:  A single line containing the number of words and the calculated average length of all words, formatted exactly as shown below in the sample output.  The average length is rounded to the nearest whole number.
Donghai helped Joan solve the I>n>v>i>t>a>t>i>o>n>a>l A problem counting words and c+a-l*c/u%l!a&t|i#n@g\ the average size of words.  Now, he wants to work with letters instead of words.  He wants to count the number of times each letter occurs in written prose.  He will ignore punctuation marks and any other non-alphabetic characters.  Uppercase and lowercase letters are considered the same letter.  Once they have been counted, he will display them with the letter of the highest count at the top and the letter of the lowest count at the bottom.  Letters that share identical counts will be listed alphabetically on the same line.__Can you help Donghai solve this problem?
Input:  First line will contain an integer N with 0 < N <= 10 which is the number of paragraphs that follow.  Each paragraph will occur on a single line of text and will not exceed 2000 characters in total length.  Any ASCII character can occur in a paragraph but the only ones of interest are the standard alphabetic letters, both uppercase and lowercase.
Output:  Each test case must display list of letters in u-p-p-e-r-c-a-s-e that have non-zero counts [like 1,2,3,4,5,6,7,8,9] formatted as the count; followed by a colon ":" followed by the letter with no spaces.  Following each test case display a line containing 10 equal signs "==========".
